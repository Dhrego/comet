---
const { items } = Astro.props;
---

<>
  {
    items.map((card: any, i: number) => {
      const count = i + 1;
      return (
        <div class="card">
          <div class="top">
            <div class="card-icon">
              <img src={card.img} alt="icon" />
            </div>
            <div class="card-content">
              <p>{card.content}</p>
            </div>
          </div>
          <div class="down">
            <span>{card.title}</span>
            <span>{"0" + count}</span>
          </div>
          <div class="card-bubble_1" />
          <div class="card-bubble_2" />
          <div class="card-bubble_3" />
        </div>
      );
    })
  }
</>

<style>
  .card {
    position: relative;
    min-height: 280px;
    min-width: 540px;
    border-radius: 8px;
    padding: 10px;
    background-color: #101019;
    border: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    justify-content: space-between;
    flex-direction: column;
    overflow: hidden;
    user-select: none;
  }

  .card-icon {
    width: 68px;
    height: 68px;
  }
  .card-icon img {
    width: 100%;
    height: 100%;
    object-fit: fill;
    object-position: center;
    border-radius: 50%;
    background-color: rgba(255, 255, 255);
  }

  .card-content {
    width: 60%;
    font-family: var(--font-Light);
    font-size: 18px;
  }
  .top {
    display: flex;
    justify-content: space-between;
  }
  .down {
    display: flex;
    justify-content: space-between;
    font-family: var(--font-Regular);
  }

  .down span {
    font-size: 40px;
    color: #d5d5d5;
    position: relative;
    z-index: 1;
  }

  .down span:last-child {
    color: #7f7f7f;
  }

  .card-bubble_1,
  .card-bubble_2,
  .card-bubble_3 {
    pointer-events: none;
  }

  .card-bubble_1 {
    position: absolute;
    left: 180px;
    height: 64px;
    width: 64px;
    border-radius: 50%;
    bottom: -9px;
    background: rgb(174, 140, 209);
    background: linear-gradient(
      180deg,
      rgba(174, 140, 209, 1) 0%,
      rgba(83, 30, 134, 1) 100%
    );
    filter: blur(25px);
  }
  .card-bubble_2 {
    position: absolute;
    left: 240px;
    height: 168px;
    width: 168px;
    border-radius: 50%;
    bottom: -70px;
    background: rgb(195, 74, 57);
    background: linear-gradient(
      180deg,
      rgba(195, 74, 57, 1) 0%,
      rgba(83, 30, 134, 1) 100%
    );
    filter: blur(25px);
  }
  .card-bubble_3 {
    position: absolute;
    left: 434px;
    height: 64px;
    width: 112px;
    border-radius: 50%;
    bottom: -18px;
    background: rgb(49, 114, 134);
    background: linear-gradient(
      180deg,
      rgba(49, 114, 134, 1) 0%,
      rgba(83, 30, 134, 1) 100%
    );
    filter: blur(25px);
  }

  @media screen and (max-width: 768px) {
    .card {
      min-height: 220px;
      min-width: 440px;
    }

    .card-icon {
      width: 48px;
      height: 48px;
    }

    .card-content {
      font-size: 16px;
    }

    .down span {
      font-size: 26px;
    }

    .card-bubble_1,
    .card-bubble_2,
    .card-bubble_3 {
      pointer-events: none;
    }

    .card-bubble_1 {
      height: 44px;
      width: 44px;
      bottom: -10px;
      left: 137px;
    }
    .card-bubble_2 {
      height: 148px;
      width: 148px;
      left: 185px;

      bottom: -60px;
    }
    .card-bubble_3 {
      height: 44px;
      width: 94px;
      left: 305px;
      bottom: -10px;
    }
  }
</style>
