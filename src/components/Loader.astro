<>
  <h1 class="counter">0</h1>

  <div class="overlay-loader">
    <div class="bar"></div>
    <div class="bar"></div>
    <div class="bar"></div>
    <div class="bar"></div>
    <div class="bar"></div>
    <div class="bar"></div>
    <div class="bar"></div>
    <div class="bar"></div>
    <div class="bar"></div>
    <div class="bar"></div>
  </div>
</>
<style>
  .counter {
    position: fixed;
    right: 40px;
    bottom: 0;
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;
    font-family: "Jolly Lodger";
    font-size: 14vw;
    z-index: 100000;
    transition: 0.3s ease;
    /* color: #fff; */
  }

  .overlay-loader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 2;
    display: flex;
  }
  .bar {
    width: 10vw;
    height: 105vh;
    /* background-color: #8aaae5; */
    background-color: #dadada;
  }

  @media only screen and (max-width: 768px) {
    .counter {
      right: 20px;
    }
  }
</style>

<script>
  import { gsap } from "gsap";

  const startLoader = () => {
    let counterElement = document.querySelector(".counter");
    let currentValue = 0;

    const updateCounter = () => {
      if (currentValue === 100) {
        return;
      }

      currentValue += Math.floor(Math.random() * 10) + 1;

      if (currentValue > 100) {
        currentValue = 100;
      }

      counterElement.textContent = `${currentValue}`;

      let delay = Math.floor(Math.random() * 200) + 50;

      setTimeout(updateCounter, delay);
    };
    updateCounter();
  };
  gsap.to(".counter", {
    duration: 0.25,
    delay: 2.5,
    opacity: 0,
  });

  gsap.to(".bar", {
    duration: 1.25,
    delay: 3,
    height: 0,
    stagger: {
      amount: 0.5,
    },
    ease: "power4.inOut",
    onComplete: () => {
      gsap.to(".overlay-loader", {
        display: "none",
      });
    },
  });
  startLoader();
</script>
